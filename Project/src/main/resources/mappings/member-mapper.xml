<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.plus.mapper.MemberMapper">

	<resultMap id="memberResult" type="user">
		<id property="memberNum" column="member_num"/>
		<result property="memberPhone" column="member_phone"/>
		<result property="memberPic" column="member_pic"/>
		<result property="memberEmail" column="member_email"/>
		<result property="memberPassword" column="member_password"/>
		<result property="memberName" column="member_name"/>
		<result property="memberNickname" column="member_nickname"/>
		<result property="memberPoint" column="member_point"/>
		<result property="memberJoindate" column="member_joindate"/>
		<result property="memberMarketing" column="member_marketing"/>
		<result property="memberLatitude" column="member_latitude"/>
		<result property="memberLongitude" column="member_logitude"/>
	</resultMap>

	<!-- 회원가입 -->
	<insert id="joinMember">
		insert into member(member_phone, member_email, member_password, member_name, member_nickname, member_pic, member_marketing, member_point, member_joindate)
		values(#{memberPhone}, #{memberEmail}, #{memberPassword}, #{memberName}, #{memberNickname}, #{memberPic}, #{memberMarketing}, 0, sysdate())
	</insert>
	
<!-- 		<select id="kakaologin" resultMap="memberResult">
		SELECT * FROM member WHERE
		member_email = #{memberEmail}
	</select> -->
	
   	<select id="kakaologin" resultType="Integer">
		SELECT count(*) FROM member WHERE
		member_email = #{memberEmail}
	</select>
	
	<!-- 로그인 관련   "MemberVO"-->
   <select id="login" resultMap="memberResult">
        SELECT *
          FROM MEMBER
         WHERE member_email = #{memberEmail}
           AND member_password = #{memberPassword}
    </select>
    
    
<!--  멤버정보 업데이트할때 사용 -->
  	<select id="selectMember" resultMap="memberResult">
		SELECT * FROM member WHERE
		member_email = #{memberEmail}
	</select> 
	

 	 <!-- 관리자가 멤버 한 명 조회할때 -->
  <select id="viewMember" resultMap="memberResult">
SELECT*
FROM member
where member_num = #{memberNum}
</select>
  
  <!-- 
	<select id="viewMember" resultMap="memberResult">
		SELECT 
		member_email = #{memberEmail},
		member_name = #{memberName},
		member_pic = #{memberPic},
		member_nickname = #{memberNickname},
		member_password = #{memberPassword},
		member_point = #{memberPoint},
		member_phone = #{memberPhone}
		FROM member 
		where member_num=#{memberNum}
	</select>   
  -->
	
<!-- 멤버 전체 리스트 조회 -->
<select id="memberList" resultMap="memberResult" parameterType="com.project.plus.domain.CriteriaMem">
SELECT *
FROM (
		SELECT *,
			row_number() over (order by member_num) as rNum
		FROM member
		WHERE 1=1
			<include refid="search"></include>
					) memPage
WHERE rNum between #{rowStart} and #{rowEnd}
ORDER BY member_num 
</select>


<!-- 멤버 페이징에 필요한 쿼리 전체글 세는 갯수-->
<select id="listCount" resultType="int" parameterType="com.project.plus.domain.SearchCriteriaMem">

		SELECT COUNT(member_num)
		  FROM member
		  WHERE 1=1
		<include refid="search"></include>	
</select>

<sql id="search">
	<if test="searchType != null">
		<if test="searchType == 'e'.toString()" >AND member_email LIKE CONCAT( '%', #{keyword}, '%')</if>
		<if test="searchType == 'n'.toString()" >AND member_name LIKE CONCAT ('%', #{keyword},'%')</if>
	</if>
</sql>

<!-- 
  	<select id="memberList" resultMap="memberResult">
		SELECT 
		member_email AS memberEmail,
		member_name AS memberName,
		member_joindate AS memberJoindate
		FROM member 
		ORDER BY member_num
	</select>  
 --> 

    
    
		<!--  닉네임 휴대전화 비밀번호 -->
 	<update id="updateMember">
		UPDATE MEMBER SET
				member_nickname = #{memberNickname}, 
				member_phone = #{memberPhone}, 
				member_password = #{memberPassword},
				member_pic = #{memberPic},
				member_point = #{memberPoint}
		WHERE member_email = #{memberEmail}
	</update> 
	
	<!-- 관리자 회원 삭제 -->
	<delete id="deleteMember" parameterType="int">
		DELETE 
		FROM member
		WHERE member_num = #{memberNum}
	</delete>
	
	<!-- 휴대폰번호 중복검사 --> 
	<select id="memberPChk" resultType="int"> 
	select count(*) 
	from member
	where member_phone = #{memberPhone} 
	</select>
	<!-- 닉네임 중복검사 --> 
	<select id="memberNChk" resultType="int"> 
	select count(*) 
	from member
	where member_nickname = #{memberNickname} 
	</select>
	
	
	 <select id="selectMemberPoint" resultType="int">
      <![CDATA[
         SELECT member_point as memberPoint
         FROM member 
         WHERE member_num = #{memberNum};
      ]]>
   </select> 
   
   <select id="selectMemberPointByNickname" resultType="Integer">
      <![CDATA[
         SELECT member_point as memberPoint
         FROM member 
         WHERE member_nickname = #{memberNickname};
      ]]>
   </select>
   
    <!-- 포인트 충전 시 멤버 포인트 업데이트  -->
    <update id="updateMemberPoint">
      UPDATE MEMBER SET member_point= #{memberPoint}
      WHERE member_num= #{memberNum};
   </update>
   
<!--========참가자 모임 결제 시 member 테이블 현금 업데이트 =========  -->

   <update id="deductMemberPoint">
      UPDATE MEMBER SET member_point = ${memberPoint}
      WHERE (member_num = ${memberNum}); 
   </update>
   
   
    <!-- 포인트 충전 시 멤버 포인트 업데이트  -->
    <update id="updateClubLeaderPoint">
      UPDATE MEMBER SET member_point= #{memberPoint}
      WHERE member_nickname= #{memberNickname};
   </update>
   
   
   
   
   
	
	
	
</mapper>