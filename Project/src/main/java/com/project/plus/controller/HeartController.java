package com.project.plus.controller;

import java.util.Arrays;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.project.plus.domain.ApplyVO;
import com.project.plus.domain.ClubVO;
import com.project.plus.domain.HeartVO;
import com.project.plus.domain.MemberVO;
import com.project.plus.domain.PaymentVO;
import com.project.plus.service.ApplyService;
import com.project.plus.service.ClubService;
import com.project.plus.service.HeartService;
import com.project.plus.service.MemberService;
import com.project.plus.service.PaymentService;

@Controller
/* @SessionAttributes("heart") */
public class HeartController {

	@Autowired
	private HeartService heartService;
	@Autowired
	private ApplyService applyService;
	@Autowired
	private MemberService memberService;
	@Autowired
	private PaymentService paymentService;
	@Autowired
	private ClubService clubService;

	@RequestMapping("/getHeartList")//.doÎ∫å
	public String getHeartList(ApplyVO avo, HeartVO vo, Model model) {
		vo.setMemberNum(5);
		avo.setMemberNum(5);
		
		model.addAttribute("checkApplyClub", applyService.checkApplyClubByMemberNum(avo));
		model.addAttribute("selectFreeClub", heartService.selectFreeClub(vo));
		model.addAttribute("selectNoFreeClub", heartService.selectNoFreeClub(vo));
		return "heartList.heart";
	}

	@RequestMapping(value = "/applyFreeClub", produces = "application/text;charset=UTF-8")//.doÎ∫å
	@ResponseBody
	public String applyFreeClub(ApplyVO vo, Model model, HttpServletRequest request) {
		String msg = "Nooo";
		System.out.println("************************** applyFreeClub.do ****************************");
		String[] clubNumArr = request.getParameterValues("clubNumArr");
		if (clubNumArr != null) {
			System.out.println("clubNumArr : " + clubNumArr.length);
			System.out.println("*********** " + vo.getClubNum() + " , memberNum : " + vo.getMemberNum());
			vo.setMemberNum(5);
			for (int i = 0; i < clubNumArr.length; i++) {
				vo.setClubNum(Integer.parseInt(clubNumArr[i]));
				if (applyService.checkApplyClub(vo) == null) {
					applyService.applyFreeClub(vo);
					System.out.println("Í∞í ÎîîÎπÑÎ°ú Îì§Ïñ¥Í∞îÎã§~!");
					msg = "Î™®ÏûÑ Ïã†Ï≤≠Ïù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.";
				} else {
					System.out.println("Ïù¥ÎØ∏ Ï∞∏Ïó¨Ï§ëÏù∏ Î™®ÏûÑÏù¥ ÏûàÏäµÎãàÎã§.");
					msg = "Ïù¥ÎØ∏ Ï∞∏Ïó¨Ï§ëÏù∏ Î™®ÏûÑÏù¥ ÏûàÏäµÎãàÎã§.";
				}
			} // forÎ¨∏ end
		} else {
			System.out.println("Ï∞úÌïú Î™®ÏûÑÏù¥ ÏóÜÏäµÎãàÎã§!");
			msg = "Ï∞úÌïú Î™®ÏûÑÏù¥ ÏóÜÏäµÎãàÎã§!";
		} // Î∂ÄÎ™®if Î¨∏ end
		return msg;
	}

	@RequestMapping("/applyPayClub")//.doÎ∫å
	public String applyPayClub(ApplyVO vo, Model model, HttpServletRequest request) {
		System.out.println("************************** applyPayClub.do ****************************");

		String clubNumArrStr[] = request.getParameter("clubNumArr").split(",");
		int clubNumArr[] = Arrays.stream(clubNumArrStr).mapToInt(Integer::parseInt).toArray();
		vo.setClubNumArr(clubNumArr);
		vo.setMemberNum(5);
		List<ApplyVO> list = applyService.applyPayClubInfo(vo);
		model.addAttribute("list", list);
		model.addAttribute("clubNumArr", request.getParameter("clubNumArr"));
		model.addAttribute("checkApplyClub", applyService.checkApplyClubByMemberNum(vo));

		return "applyPayClub.heart";
	}

	@RequestMapping("/applyPayClubPayment")//.doÎ∫å
	public String applyPayClubPayment(ApplyVO vo, MemberVO mvo, PaymentVO pvo, Model model, HttpServletRequest request) {
		String msg ="";
		System.out.println("************************** applyPayClubPayment.do ****************************");

		System.out.println("Î¶¨ÌÄòÏä§Ìä∏ Í∞í ÎΩëÏïÑÎ≥¥Í∏∞ : " + request.getParameter("clubNumArr").split(","));
		String clubNumArrStr[] = request.getParameter("clubNumArr").split(",");
		System.out.println("clubNumArrÍ∞í ÌôïÏù∏ÌïòÍ∏∞ : " + Arrays.toString(clubNumArrStr));// Î∞∞Ïó¥Ïóê ÏΩ§ÎßàÎ°ú Íµ¨Î∂ÑÎêòÏñ¥ Îì§Ïñ¥Í∞ÑÎã§.

		int clubNumArr[] = Arrays.stream(clubNumArrStr).mapToInt(Integer::parseInt).toArray();

		System.out.println("club Í∞í ÌôïÏù∏ÌïòÍ∏∞ : " + Arrays.toString(clubNumArr));
		System.out.println("getTotalFee : " + vo.getTotalFee());
		int totalFee = vo.getTotalFee();

		mvo.setMemberNum(5);
		mvo.setMemberPoint(totalFee);
		int currentPoint = memberService.selectMemberPoint(mvo); //Î≥¥Ïú† Ìè¨Ïù∏Ìä∏ 

		if (clubNumArrStr != null) {
			if ((currentPoint == 0) && ((currentPoint - totalFee) < 0)) {
				System.out.println("Ìè¨Ïù∏Ìä∏Í∞Ä Î∂ÄÏ°±Ìï©ÎãàÎã§.");
				msg = "Ìè¨Ïù∏Ìä∏Í∞Ä Î∂ÄÏ°±Ìï©ÎãàÎã§. ÎßàÏù¥ÌéòÏù¥ÏßÄÏóêÏÑú Ìè¨Ïù∏Ìä∏ Ï∂©Ï†Ñ Í∞ÄÎä•Ìï©ÎãàÎã§.";
			} else {
				// Ìè¨Ïù∏Ìä∏ Î∂ÄÏ°±ÌïòÏßÄ ÏïäÏúºÎ©¥ Î™®ÏûÑÏùÑ Ïã†Ï≤≠ÌïòÍ≥†
				pvo.setMemberPoint((currentPoint - totalFee));
				for (int i : clubNumArr) {
					System.out.println(i);
					vo.setClubNum(i);
					vo.setMemberNum(5); // ÏûÑÏùòÏùò Í∞í
					pvo.setClubNum(i);
					pvo.setMemberNum(5);
					// Î™®ÏûÑ Ïã†Ï≤≠ -apply Ïã†Ï≤≠ÌÖåÏù¥Î∏îÏóê Ï†ïÎ≥¥ ÎÑ£Ïñ¥Ï£ºÍ∏∞
					applyService.applyFreeClub(vo); 
					// Ï∞∏Í∞ÄÏûê payment Ï∂îÍ∞ÄÏãúÌÇ®Îã§. 
					paymentService.useMemberPoint(pvo);	
					// Î™®ÏûÑÏû• Ìè¨Ïù∏Ìä∏Î•º 10% ÎñºÍ≥† Ï¶ùÍ∞ÄÏãúÌÇ®Îã§. 3 
					ClubVO cvo = new ClubVO(); // Í∞í Ï§ëÎ≥µ Îê†ÍπåÎ¥ê 
					cvo.setClubNum(i);
					String clubLeader = clubService.selectClub(cvo).getClubLeader();
					System.out.println("clubLeader : " + clubLeader);
					int clubFee = clubService.selectClub(cvo).getClubFee();
					int insertFee = (int)clubFee - (clubFee * 10 / 100);
					MemberVO memberVo = new MemberVO();
					memberVo.setMemberNickname(clubLeader);
					int clubLeaderCurrentPoint = memberService.selectMemberPointByNickname(memberVo);
					memberVo.setMemberPoint(clubLeaderCurrentPoint + insertFee);
					memberService.updateClubLeaderPoint(memberVo);
					// Í¥ÄÎ¶¨ÏûêÌïúÌÖå 10% Ï†ÅÎ¶Ω
					MemberVO adminMemberVo = new MemberVO();
					adminMemberVo.setMemberNickname("Í¥ÄÎ¶¨Ïûê");
					adminMemberVo.setMemberPoint((int) clubFee * 10 / 100);
					memberService.updateClubLeaderPoint(adminMemberVo);
				}// forÎ¨∏ end 
				mvo.setMemberPoint((currentPoint - totalFee));
				memberService.deductMemberPoint(mvo);
				msg = "Î™®ÏûÑ Ïã†Ï≤≠Ïù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§. ÎßàÏù¥ÌéòÏù¥ÏßÄÏóêÏÑú ÌôïÏù∏ÌïòÏÑ∏Ïöî.";
			}
		}
		model.addAttribute("msg", msg);
		return "forward:/getHeartList"; // .do Î∫å
	}
	
	@RequestMapping(value = "/insertHeart", produces = "application/text;charset=UTF-8")
	@ResponseBody
	public String insertHeart(HeartVO vo ,Model model , HttpServletRequest request) {
		System.out.println("************************** insertHeart.do ****************************");
		System.out.print(vo.getMemberNum()+ "  \"Î©§Î≤Ñ ÎÑòÎ≤Ñ\" ");
		System.out.print(vo.getClubNum()+ "  \"ÌÅ¥ÎüΩ ÎÑòÎ≤Ñ\" ");
		System.out.print(vo.getClubName()+ "  \"ÌÅ¥ÎüΩ Ïù¥Î¶Ñ\" ");
		
		heartService.insertHeart(vo);
		System.out.println("Ï∞úÎ™©Î°ùÏ∂îÍ∞ÄÏôÑÎ£å.. view..");
		return "Ï∞úÌïòÍ∏∞ ÏôÑÎ£å! Ï∞úÎ™©Î°ùÏóêÏÑú ÌôïÏù∏Ìï¥Î≥¥ÏÑ∏Ïöî‚ù§";
	}

	//Î∞∞Ïó¥ Ï∞úÎ™©Î°ù ÏÇ≠Ï†ú 
	@RequestMapping(value = "/deleteHeart", produces = "application/text;charset=UTF-8") //.doÎ∫å
	@ResponseBody
	public String deleteHeart(HeartVO vo ,Model model , HttpServletRequest request) {
		System.out.println("************************** deleteHeart.do ****************************");
		vo.setMemberNum(5);
		String[] clubNumArr = request.getParameterValues("clubNumArr");
		System.out.println(clubNumArr.length);
		int clubNumArrInt[] = Arrays.stream(clubNumArr).mapToInt(Integer::parseInt).toArray();
		System.out.println(clubNumArr.length);
		for (int i : clubNumArrInt) {
			vo.setClubNum(i);
			System.out.println("vooooo: " +vo.getClubNum());
			heartService.deleteHeart(vo);
		}
		return "Ï∞úÎ™©Î°ùÏóêÏÑú ÏÇ≠Ï†ú ÎêòÏóàÏäµÎãàÎã§.";
	}
	
	//Îã®Ïùº Ï∞úÎ™©Î°ù ÏÇ≠Ï†ú 
	@RequestMapping(value = "/deleteHeartOne", produces = "application/text;charset=UTF-8")
	@ResponseBody
	public String deleteHeartOne(HeartVO vo ,Model model , HttpServletRequest request) {
		System.out.println("************************** deleteHeartOne.do ****************************");
		System.out.print(vo.getMemberNum()+ "  \"Î©§Î≤Ñ ÎÑòÎ≤Ñ\" ");
		System.out.print(vo.getClubNum()+ "  \"ÌÅ¥ÎüΩ ÎÑòÎ≤Ñ\" ");
		heartService.deleteHeart(vo);
		return "Ï∞úÎ™©Î°ùÏóêÏÑú ÏÇ≠Ï†ú ÎêòÏóàÏäµÎãàÎã§.üíå";
	}
	
	
}
